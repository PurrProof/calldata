import { forwardRef, useImperativeHandle } from "react";
import useStore from '../store/store';

interface IExample {
  id: number;
  name: string;
  signature: string;
  calldata: string;
}

const examples = [
  {
    id: 1,
    name: "Example 1",
    signature:
      "function swap(uint256 A,(uint256,bytes,uint256),(uint256,bytes,bytes,uint256),uint256)",
    calldata:
      "0xd2f393e7" +
      "0000000000000000000000000000000000000000000000000000000000000001" +
      "0000000000000000000000000000000000000000000000000000000000000080" +
      "0000000000000000000000000000000000000000000000000000000000000120" +
      "0000000000000000000000000000000000000000000000000000000000000006" +
      "0000000000000000000000000000000000000000000000000000000000000002" +
      "0000000000000000000000000000000000000000000000000000000000000060" +
      "0000000000000000000000000000000000000000000000000000000000000003" +
      "0000000000000000000000000000000000000000000000000000000000000003" +
      "1111110000000000000000000000000000000000000000000000000000000000" +
      "0000000000000000000000000000000000000000000000000000000000000004" +
      "0000000000000000000000000000000000000000000000000000000000000080" +
      "00000000000000000000000000000000000000000000000000000000000000c0" +
      "0000000000000000000000000000000000000000000000000000000000000005" +
      "0000000000000000000000000000000000000000000000000000000000000003" +
      "2222220000000000000000000000000000000000000000000000000000000000" +
      "0000000000000000000000000000000000000000000000000000000000000003" +
      "3333330000000000000000000000000000000000000000000000000000000000",
  },
  {
    //https://medium.com/@ljmanini/abi-encoding-deep-dive-fbb750facea9
    id: 2,
    name: "Example 2",
    signature:
      "function swap((bytes32,uint8,address,address,uint256,bytes), (address,bool,address,bool), uint256, uint256)",
    calldata:
      "0x52bbbe2900000000000000000000000000000000000000000000000000000000000000e00000000000000000000000008d7e58c0ebf988dbb31a993696286106964dd4f400000000000000000000000000000000000000000000000000000000000000000000000000000000000000008d7e58c0ebf988dbb31a993696286106964dd4f400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b3a7f984c82f6ffa3d428ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff929a9b6d40e4723f690db77a7ebb65d3254be1e00002000000000000000004d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000677d4fbbcdd9093d725b0042081ab0b67c63d12100000000000000000000000000000000000000000000000006f05b59d3b2000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000",
  }
];

const ExampleLoader = forwardRef((_, ref) => {
  const { setSignature, setCalldata, abiDecode } = useStore();

  const loadExample = (example: IExample) => {
    setSignature(example.signature);
    setCalldata(example.calldata);
    abiDecode(example.signature, example.calldata);
  };

  useImperativeHandle(ref, () => ({
    loadExample,
  }));

  return (
    <div>
      {examples.map((example) => (
        <button key={example.id} onClick={() => loadExample(example)}>
          Load {example.name}
        </button>
      ))}
    </div>
  );
});

export default ExampleLoader;
